apiVersion: batch/v1
kind: Job
metadata:
  name: build-and-mount-job
spec:
  template:
    spec:
      initContainers:
      - name: clone-repo
        image: alpine/git
        command: ["/bin/sh", "-c"]
        args:
          - |
            echo "Cloning the repository..."
            git clone http://oauth2:glpat-1EWzEpgmcfMPsN3d2NYo@192.168.59.1/root/hello-world.git /workspace && echo "Repository cloned successfully" || echo "Failed to clone the repository"
            ls -alh /workspace
        volumeMounts:
        - name: repo-volume
          mountPath: /workspace
      containers:
      - name: build-and-mount
        image: docker:latest
        command: ["/bin/sh", "-c"]
        args:
          - |
            echo "Building Docker Image..."
            docker build -t 10.96.59.146:5000/hello-world:$CI_COMMIT_REF_SLUG /workspace/ && echo "Docker Image built successfully." || echo "Docker build failed."
            echo "Pushing Docker Image to the Kubernetes Docker Registry..."
            docker push 10.96.59.146:5000/hello-world:$CI_COMMIT_REF_SLUG && echo "Docker Image pushed successfully." || echo "Docker push failed."
            exit_code=$?
            if [ $exit_code -eq 0 ]; then
              echo "Build and push successful"
              exit 0
            else
              echo "Build or push failed"
              exit 1
            fi
        env:
        - name: CI_COMMIT_REF_SLUG
          value: "latest"
        volumeMounts:
        - name: repo-volume
          mountPath: /workspace
        - name: docker-socket
          mountPath: /var/run/docker.sock  # Монтирование сокета Docker
      volumes:
      - name: repo-volume
        emptyDir: {}
      - name: docker-socket
        hostPath:
          path: /var/run/docker.sock
          type: Socket
      restartPolicy: Never
